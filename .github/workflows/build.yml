name: Build release binaries

on:
  push:
    tags:
      - 'v[0-9]+.*'

jobs:
  create_release:
    name: Create release
    runs-on: ubuntu-latest
    # Note this. We are going to use that in further jobs.
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

  release_assets:
    name: Release assets
    needs: create_release # we need to know the upload URL
    runs-on: ${{ matrix.config.os }} # we run many different builds
    strategy:
      matrix:
        config:
          - os: ubuntu-latest
          - os: macos-latest
          - os: windows-latest

    steps:
      # checkout of cource
      - name: Checkout code
        uses: actions/checkout@v2
    
      - name: Set file ending
        id: set_fileEnding
        run: |
          if [ "${{ runner.os }}" = "Windows" ]; then
            echo "::set-output name=fileEnding::.exe"
          else
            echo "::set-output name=fileEnding::"
          fi

      # setup python and pipenv
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"
      - name: Install pipenv
        run: |
          python -m pip install --upgrade pipenv wheel

      - id: cache-pipenv
        uses: actions/cache@v1
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}

      - name: Install dependencies
        if: steps.cache-pipenv.outputs.cache-hit != 'true'
        run: |
          pipenv install --deploy --dev

      - name: Build binary
        run: |
          pipenv run pyinstaller --onefile lutron-bridge-server.py

      # Upload assets
      - name: Upload release assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          # This is how it will be named on the release page. Put hatever name
          # you like, remember that they need to be different for each platform.
          # You can choose any build matrix parameters. For Rust I use the
          # target triple.
          asset_name: lutron-bridge-server-${{ github.event.release.tag_name }}-${{ runner.os }}${{ steps.set_fileEnding.outpus.fileEnding }}
          # The path to the file you want to upload.
          asset_path: ./dist/lutron-bridge-server${{ steps.set_fileEnding.outpus.fileEnding }}
          # probably you will need to change it, but most likely you are
          # uploading a binary file
          asset_content_type: application/octet-stream
